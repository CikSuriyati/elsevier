Hypothesis = c("Moderation Hypothesis (H1)", "Mediation Hypothesis (H2)",
"Combined Moderation and Mediation Hypothesis (H3)",
"Interaction Hypothesis (H4)"),
Statistical_Expression = c(
"$$\\text{cashless_preference} = \\beta_0 + \\beta_1 \\times \\text{financial_knowledge} + \\beta_2 \\times \\text{income} + \\beta_3 \\times (\\text{financial_knowledge} \\times \\text{income}) + \\epsilon$$",
"$$\\text{financial_knowledge} = \\gamma_0 + \\gamma_1 \\times \\text{income} + \\eta$$\n$$\\text{cashless_preference} = \\alpha_0 + \\alpha_1 \\times \\text{financial_knowledge} + \\alpha_2 \\times \\text{income} + \\epsilon$$",
"$$\\text{cashless_preference} = \\beta_0 + \\beta_1 \\times \\text{financial_knowledge} + \\beta_2 \\times \\text{income} + \\beta_3 \\times (\\text{financial_knowledge} \\times \\text{income}) + \\epsilon$$",
"$$\\text{cashless_preference} = \\delta_0 + \\delta_1 \\times \\text{financial_knowledge} + \\delta_2 \\times \\text{income} + \\delta_3 \\times (\\text{financial_knowledge} \\times \\text{income}) + \\epsilon$$"
)
)
# Print the table
kable(hypotheses, format = "markdown", col.names = c("Hypothesis", "Statistical Expression"), align = "l", escape = FALSE)
# Create a data frame with hypotheses and statistical expressions
hypotheses <- data.frame(
Hypothesis = c("Moderation Hypothesis (H1)", "Mediation Hypothesis (H2)",
"Combined Moderation and Mediation Hypothesis (H3)",
"Interaction Hypothesis (H4)"),
Statistical_Expression = c(
"$\\text{cashless_preference} = \\beta_0 + \\beta_1 \\times \\text{financial_knowledge} + \\beta_2 \\times \\text{income} + \\beta_3 \\times (\\text{financial_knowledge} \\times \\text{income}) + \\epsilon$",
"$$\\text{financial_knowledge} = \\gamma_0 + \\gamma_1 \\times \\text{income} + \\eta$$\n$$\\text{cashless_preference} = \\alpha_0 + \\alpha_1 \\times \\text{financial_knowledge} + \\alpha_2 \\times \\text{income} + \\epsilon$$",
"$$\\text{cashless_preference} = \\beta_0 + \\beta_1 \\times \\text{financial_knowledge} + \\beta_2 \\times \\text{income} + \\beta_3 \\times (\\text{financial_knowledge} \\times \\text{income}) + \\epsilon$$",
"$$\\text{cashless_preference} = \\delta_0 + \\delta_1 \\times \\text{financial_knowledge} + \\delta_2 \\times \\text{income} + \\delta_3 \\times (\\text{financial_knowledge} \\times \\text{income}) + \\epsilon$$"
)
)
# Load required libraries
library(kableExtra)
# Create a data frame with hypotheses and statistical expressions
hypotheses <- data.frame(
Hypothesis = c("Moderation Hypothesis (H1)", "Mediation Hypothesis (H2)",
"Combined Moderation and Mediation Hypothesis (H3)",
"Interaction Hypothesis (H4)"),
Statistical_Expression = c(
"",
"",
"",
""
)
)
# Print the table
kable(hypotheses, format = "markdown", col.names = c("Hypothesis", "Statistical Expression"), align = "l", escape = FALSE)
# Load required libraries
library(kableExtra)
# Create a data frame with hypotheses and statistical expressions
hypotheses <- data.frame(
Hypothesis = c("Moderation Hypothesis (H1)", "Mediation Hypothesis (H2)",
"Combined Moderation and Mediation Hypothesis (H3)",
"Interaction Hypothesis (H4)"),
Statistical_Expression = c(
"",
"",
"",
""
)
)
# Print the table
kable(hypotheses, format = "markdown", col.names = c("Hypothesis", "Statistical Expression"), align = "l", escape = FALSE)
# Load required libraries
library(kableExtra)
# Create a data frame with hypotheses and statistical expressions
hypotheses <- data.frame(
Hypothesis = c("Moderation Hypothesis (H1)", "Mediation Hypothesis (H2)",
"Combined Moderation and Mediation Hypothesis (H3)",
"Interaction Hypothesis (H4)"),
Statistical_Expression = c(
"",
"",
"",
""
)
)
# Print the table
kable(hypotheses, format = "markdown", col.names = c("Hypothesis", "Statistical Expression"), align = "l", escape = FALSE)
# Load required libraries
library(kableExtra)
# Create a data frame with hypotheses and statistical expressions
hypotheses <- data.frame(
Hypothesis = c("Moderation Hypothesis (H1)", "Mediation Hypothesis (H2)",
"Combined Moderation and Mediation Hypothesis (H3)",
"Interaction Hypothesis (H4)"),
Statistical_Expression = c(
"${y} =\beta_0 + \beta_1 \times {financial_knowledge} + \beta_2 \times {income} + \beta_3 \times ({financial_knowledge} \times {income}) + \epsilon$",
# Load required libraries
library(kableExtra)
# Create a data frame with hypotheses and statistical expressions
hypotheses <- data.frame(
Hypothesis = c("Moderation Hypothesis (H1)", "Mediation Hypothesis (H2)",
"Combined Moderation and Mediation Hypothesis (H3)",
"Interaction Hypothesis (H4)"),
Statistical_Expression = c(
"${y} =\beta_0 + \beta_1 \times {financial_knowledge} + \beta_2 \times {income} + \beta_3 \times ({financial_knowledge} \times {income}) + \epsilon$",
# Load required libraries
library(kableExtra)
# Create a data frame with hypotheses and statistical expressions
hypotheses <- data.frame(
Hypothesis = c("Moderation Hypothesis (H1)", "Mediation Hypothesis (H2)",
"Combined Moderation and Mediation Hypothesis (H3)",
"Interaction Hypothesis (H4)"),
Statistical_Expression = c(
"${y} =\beta_0 + \beta_1 \times {financial_knowledge} + \beta_2 \times {income} + \beta_3 \times ({financial_knowledge} \times {income}) + n$",
"",
"",
""
)
)
# Print the table
kable(hypotheses, format = "markdown", col.names = c("Hypothesis", "Statistical Expression"), align = "l", escape = FALSE)
# Load required libraries
library(kableExtra)
# Create a data frame with hypotheses and statistical expressions
hypotheses <- data.frame(
Hypothesis = c("Moderation Hypothesis (H1)", "Mediation Hypothesis (H2)",
"Combined Moderation and Mediation Hypothesis (H3)",
"Interaction Hypothesis (H4)"),
Statistical_Expression = c(
~"${y} =\beta_0 + \beta_1 \times {financial_knowledge} + \beta_2 \times {income} + \beta_3 \times ({financial_knowledge} \times {income}) + n$",
"",
"",
""
)
)
# Load required libraries
library(kableExtra)
# Create a data frame with hypotheses and statistical expressions
hypotheses <- data.frame(
Hypothesis = c("Moderation Hypothesis (H1)", "Mediation Hypothesis (H2)",
"Combined Moderation and Mediation Hypothesis (H3)",
"Interaction Hypothesis (H4)"),
Statistical_Expression = c(
"${y} =\beta_0 + \beta_1 \times {financial_knowledge} + \beta_2 \times {income} + \beta_3 \times ({financial_knowledge} \times {income}) + n$",
"",
"",
""
)
)
# Print the table
kable(hypotheses, format = "markdown", col.names = c("Hypothesis", "Statistical Expression"), align = "l", escape = FALSE)
# Load required libraries
library(kableExtra)
# Create a data frame with hypotheses and statistical expressions
hypotheses <- data.frame(
Hypothesis = c("Moderation Hypothesis (H1)", "Mediation Hypothesis (H2)",
"Combined Moderation and Mediation Hypothesis (H3)",
"Interaction Hypothesis (H4)"),
Statistical_Expression = c(
"The effect of financial knowledge on cashless payment preference is moderated by income.",
"",
"",
""
)
)
# Print the table
kable(hypotheses, format = "markdown", col.names = c("Hypothesis", "Statistical Expression"), align = "l", escape = FALSE)
# Install and load the required packages
install.packages(c("lavaan", "semTools"))
library(lavaan)
library(semTools)
install.packages(c("lavaan", "semTools"))
install.packages(c("lavaan", "semTools"))
install.packages(c("lavaan", "semTools"))
install.packages(c("lavaan", "semTools"))
install.packages(c("lavaan", "semTools"))
setwd("~/Desktop/website/shinymanager/gradeR/elsevier")
# Install and load the required packages
install.packages(c("lavaan", "semTools"))
library(lavaan)
library(semTools)
install.packages("semTools")
library(semTools)
# Install and load the required packages
library(lavaan)
library(semTools)
# Assuming you have a dataset named 'your_data' with variables: income, financial_knowledge, and cashless_preference
# Define the model for moderation and mediation
model <- '
# Mediation model
financialKnowledge ~ income
preference ~ financialKnowledge + income
indirect_effect := ab
# Moderation model
preference ~ c*income
'
# Fit the model
fit <- sem(model, data = mydata3)
# Install and load the required packages
library(lavaan)
library(semTools)
# Assuming you have a dataset named 'your_data' with variables: income, financial_knowledge, and cashless_preference
# Define the model for moderation and mediation
model <- '
# Mediation model
financialKnowledge ~ income
preference ~ financialKnowledge + income
indirect_effect := ab
# Moderation model
preference ~ c*income
'
# Fit the model
fit <- sem(model, data = mydata3)
# Install and load the required packages
library(lavaan)
library(semTools)
# Assuming you have a dataset named 'your_data' with variables: income, financial_knowledge, and cashless_preference
# Define the model for moderation and mediation
model <- '
# Mediation model
financialKnowledge ~ income
preference ~ financialKnowledge + income
indirect_effect := ab
# Moderation model
preference ~ c*income
'
# Fit the model
fit <- sem(model, data = mydata3)
# Install and load the required packages
library(lavaan)
library(semTools)
# Assuming you have a dataset named 'your_data' with variables: income, financial_knowledge, and cashless_preference
# Define the model for mediation and moderation
model <- '
# Mediation model
financialKnowledge ~ income
preference ~ financialKnowledge + income
indirect_effect := ab
# Moderation model
preference ~ c*income
'
# Fit the model
fit <- sem(model, data = mydata3)
# Install and load the required packages
library(lavaan)
library(semTools)
# Assuming you have a dataset named 'your_data' with variables: income, financial_knowledge, and cashless_preference
# Define the model for mediation and moderation
model <- '
# Mediation model
financialKnowledge ~ income
preference ~ financialKnowledge + income
indirect_effect := ab
'
# Fit the model
fit <- sem(model, data = mydata3)
# Install and load the required packages
library(lavaan)
library(semTools)
# Assuming you have a dataset named 'your_data' with variables: income, financial_knowledge, and cashless_preference
# Define the model for mediation and moderation
model <- '
financialKnowledge =~ e1+e2+e4+e5+e6+e7+e8+e9
income =~ d1+d3+d4+d5+d6+d7+d8+d9
preference =~ b2 + b4+ b6 + b7
# Mediation model
financialKnowledge ~ income
preference ~ financialKnowledge + income
indirect_effect := ab
'
# Fit the model
fit <- sem(model, data = mydata3)
# Install and load the required packages
library(lavaan)
library(semTools)
# Assuming you have a dataset named 'your_data' with variables: income, financial_knowledge, and cashless_preference
# Define the model for mediation and moderation
model <- '
financialKnowledge =~ e1+e2+e4+e5+e6+e7+e8+e9
income =~ d1+d3+d4+d5+d6+d7+d8+d9
preference =~ b2 + b4+ b6 + b7
# Mediation model
financialKnowledge ~ income
preference ~ financialKnowledge + income
indirect_effect := financialKnowledge*income
'
# Fit the model
fit <- sem(model, data = mydata3)
# Install and load the required packages
library(lavaan)
library(semTools)
# Assuming you have a dataset named 'your_data' with variables: income, financial_knowledge, and cashless_preference
# Define the model for mediation and moderation
model <- '
financialKnowledge =~ e1+e2+e4+e5+e6+e7+e8+e9
income =~ d1+d3+d4+d5+d6+d7+d8+d9
preference =~ b2 + b4+ b6 + b7
# Mediation model
financialKnowledge ~ income
preference ~ financialKnowledge + income
indirect_effect := ab
'
# Fit the model
fit <- sem(model, data = mydata3)
# Install and load the required packages
library(lavaan)
library(semTools)
# Assuming you have a dataset named 'your_data' with variables: income, financial_knowledge, and cashless_preference
# Define the model for mediation and moderation
model <- '
financialKnowledge =~ e1+e2+e4+e5+e6+e7+e8+e9
income =~ d1+d3+d4+d5+d6+d7+d8+d9
preference =~ b2 + b4+ b6 + b7
# Mediation model
financial_knowledge ~ income
cashless_preference ~ c*income + b*financial_knowledge
'
# Fit the model
fit <- sem(model, data = mydata3)
# Install and load the required packages
library(lavaan)
library(semTools)
# Assuming you have a dataset named 'your_data' with variables: income, financial_knowledge, and cashless_preference
# Define the model for mediation and moderation
model <- '
financialKnowledge =~ e1+e2+e4+e5+e6+e7+e8+e9
income =~ d1+d3+d4+d5+d6+d7+d8+d9
preference =~ b2 + b4+ b6 + b7
# Mediation model
financialKnowledge ~ income
preference ~ c*income + b*financialKnowledge
'
# Fit the model
fit <- sem(model, data = mydata3)
# Obtain summary of the model
summary(fit, standardized = TRUE)
# Test for mediation and moderation effects
med_mod_effects <- modificationindices(fit)
# Display modification indices
print(med_mod_effects, details = TRUE)
# Test for specific indirect effect
test_indirect <- semTools::semTools(fit, "indirect", indices = "indirect_effect")
# Install and load the required packages
library(lavaan)
library(semTools)
# Assuming you have a dataset named 'your_data' with variables: income, financial_knowledge, and cashless_preference
# Define the model for mediation and moderation
model <- '
financialKnowledge =~ e1+e2+e4+e5+e6+e7+e8+e9
income =~ d1+d3+d4+d5+d6+d7+d8+d9
preference =~ b2 + b4+ b6 + b7
# Mediation model
financialKnowledge ~ income
preference ~ c*income + b*financialKnowledge
'
# Fit the model
fit <- sem(model, data = mydata3)
# Obtain summary of the model
summary(fit, standardized = TRUE)
# Test for mediation and moderation effects
med_mod_effects <- modificationindices(fit)
# Display modification indices
print(med_mod_effects, details = TRUE)
# Test for specific indirect effect
#test_indirect <- semTools::semTools(fit, "indirect", indices = "indirect_effect")
#summary(test_indirect)
# Calculate indirect effect manually
indirect_effect <- coef(fit)["c:income"] * coef(fit)["b:financial_knowledge"]
# Display indirect effect
cat("Indirect Effect:", indirect_effect, "\n")
setwd("~/Desktop/website/shinymanager/gradeR/elsevier")
corrplot::(preference, income, financialKnowledge)
corrplot::d
corrplot::mydata3
cor(preference, income, financialKnowledge)
cor(preference, income)
library(tidyverse)
library(knitr)
library(lavaan)
library(psych)
library(MBESS)
mod1 <- "# a path
financialKnowledge ~ a * income
# b path
preference ~ b * income
# c prime path
preference ~ cp * financialKnowledge
# indirect and total effects
ab := a * b
total := cp + ab"
fsem1 <- sem(mod1, data = d)
library(tidyverse)
library(knitr)
library(lavaan)
library(psych)
library(MBESS)
d<-read.csv("~/Desktop/website/shinymanager/gradeR/elsevier/mydata3.csv")
mod1 <- "# a path
financialKnowledge ~ a * income
# b path
preference ~ b * income
# c prime path
preference ~ cp * financialKnowledge
# indirect and total effects
ab := a * b
total := cp + ab"
fsem1 <- sem(mod1, data = d)
library(tidyverse)
library(knitr)
library(lavaan)
library(psych)
library(MBESS)
d<-read.csv("~/Desktop/website/shinymanager/gradeR/elsevier/mydata3.csv")
mod1 <- "
financialKnowledge =~ e1+e2+e4+e5+e6+e7+e8+e9
income =~ d1+d3+d4+d5+d6+d7+d8+d9
preference =~ b2 + b4+ b6 + b7
# a path
financialKnowledge ~ a * income
# b path
preference ~ b * income
# c prime path
preference ~ cp * financialKnowledge
# indirect and total effects
ab := a * b
total := cp + ab"
fsem1 <- sem(mod1, data = d)
summary(fsem1, standardized = TRUE)
library(tidyverse)
library(knitr)
library(lavaan)
library(psych)
library(MBESS)
d<-read.csv("~/Desktop/website/shinymanager/gradeR/elsevier/mydata3.csv")
mod1 <- "
financialKnowledge =~ e1+e2+e4+e5+e6+e7+e8+e9
income =~ d1+d3+d4+d5+d6+d7+d8+d9
preference =~ b2 + b4+ b6 + b7
# a path
financialKnowledge ~ a * income
# b path
preference ~ b * income
# c prime path
preference ~ cp * financialKnowledge
# indirect and total effects
ab := a * b
total := cp + ab"
fsem1 <- sem(mod1, data = d)
summary(fsem1, standardized = TRUE)
parameterestimates(fsem1, boot.ci.type = "bca.simple", standardized = TRUE) %>%
kable()
library(tidyverse)
library(knitr)
library(lavaan)
library(psych)
library(MBESS)
d<-read.csv("~/Desktop/website/shinymanager/gradeR/elsevier/mydata3.csv")
mod1 <- "
financialKnowledge =~ e1+e2+e4+e5+e6+e7+e8+e9
income =~ d1+d3+d4+d5+d6+d7+d8+d9
preference =~ b2 + b4+ b6 + b7
# a path
income ~ a * financialKnowledge
# b path
preference ~ b * income
# c prime path
preference ~ cp * financialKnowledge
# indirect and total effects
ab := a * b
total := cp + ab"
fsem1 <- sem(mod1, data = d)
summary(fsem1, standardized = TRUE)
parameterestimates(fsem1, boot.ci.type = "bca.simple", standardized = TRUE) %>%
kable()
with(d, mediation(x = financialKnowledge, mediator = income, dv = preference))
library(tidyverse)
library(knitr)
library(lavaan)
library(psych)
library(MBESS)
d<-read.csv("~/Desktop/website/shinymanager/gradeR/elsevier/mydata3.csv")
mod1 <- "
financialKnowledge =~ e1+e2+e4+e5+e6+e7+e8+e9
income =~ d1+d3+d4+d5+d6+d7+d8+d9
preference =~ b2 + b4+ b6 + b7
# a path
income ~ a * financialKnowledge
# b path
preference ~ b * income
# c prime path
preference ~ cp * financialKnowledge
# indirect and total effects
ab := a * b
total := cp + ab"
fsem1 <- sem(mod1, data = d)
summary(fsem1, standardized = TRUE)
parameterestimates(fsem1, boot.ci.type = "bca.simple", standardized = TRUE) %>%
kable()
#Plot the mediation effect
#with(d, mediation(x = financialKnowledge, mediator = income, dv = preference))
mediate(preference ~ financialKnowledge + income, data = d, n.iter = 10000) %>% print(short = FALSE)
library(tidyverse)
library(knitr)
library(lavaan)
library(psych)
library(MBESS)
d<-read.csv("~/Desktop/website/shinymanager/gradeR/elsevier/mydata3.csv")
mod1 <- "
financialKnowledge =~ e1+e2+e4+e5+e6+e7+e8+e9
income =~ d1+d3+d4+d5+d6+d7+d8+d9
preference =~ b2 + b4+ b6 + b7
# a path
income ~ a * financialKnowledge
# b path
preference ~ b * income
# c prime path
preference ~ cp * financialKnowledge
# indirect and total effects
ab := a * b
total := cp + ab"
fsem1 <- sem(mod1, data = d)
summary(fsem1, standardized = TRUE)
parameterestimates(fsem1, boot.ci.type = "bca.simple", standardized = TRUE) %>%
kable()
#Plot the mediation effect
#with(d, mediation(x = financialKnowledge, mediator = income, dv = preference))
mediate(preference ~ financialKnowledge + income, data = d) %>% print(short = FALSE)
